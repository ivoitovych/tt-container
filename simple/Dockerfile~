# Use Ubuntu 22.04 as base (matching your environment)
FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV TT_METAL_HOME=/workspace/tt-metal
ENV PYTHONPATH=/workspace/tt-metal
ENV ARCH_NAME=wormhole_b0
ENV PATH=/snap/bin:$PATH

# Install basic dependencies
RUN apt-get update && apt-get install -y \
    # Basic tools
    sudo \
    wget \
    curl \
    git \
    git-lfs \
    vim \
    nano \
    # Build tools
    build-essential \
    dkms \
    ccache \
    ninja-build \
    pkg-config \
    # Python
    python3 \
    python3-pip \
    python3-venv \
    python3-dev \
    # Libraries
    libstdc++-12-dev \
    libmpfr-dev \
    libgmp-dev \
    libmpc-dev \
    libnuma-dev \
    libhwloc-dev \
    libtbb-dev \
    libcapstone-dev \
    # Additional tools
    cargo \
    pandoc \
    graphviz \
    doxygen \
    texlive-latex-base \
    # System tools
    kmod \
    pciutils \
    && rm -rf /var/lib/apt/lists/*

# Install CMake 3.30 from source (required for tt-train)
RUN wget https://github.com/Kitware/CMake/releases/download/v3.30.0/cmake-3.30.0-linux-x86_64.tar.gz && \
    tar -xzf cmake-3.30.0-linux-x86_64.tar.gz && \
    cp -r cmake-3.30.0-linux-x86_64/* /usr/local/ && \
    rm -rf cmake-3.30.0-linux-x86_64*

# Create workspace directory
WORKDIR /workspace

# Clone repositories
RUN git clone https://github.com/tenstorrent/tt-kmd.git && \
    git clone https://github.com/tenstorrent/tt-flash.git && \
    git clone https://github.com/tenstorrent/tt-system-tools.git && \
    git clone https://github.com/tenstorrent/tt-smi.git && \
    git clone https://github.com/tenstorrent/tt-metal.git

# Initialize tt-metal submodules
WORKDIR /workspace/tt-metal
RUN git submodule update --init --recursive && \
    git submodule foreach 'git lfs fetch --all && git lfs pull'

# Install tt-metal dependencies
RUN ./install_dependencies.sh || true

# Create Python virtual environment for tt-metal
RUN ./create_venv.sh

# Install tt-smi
WORKDIR /workspace/tt-smi
RUN python3 -m venv .venv && \
    . .venv/bin/activate && \
    pip3 install --upgrade pip && \
    pip install .

# Install tt-flash
WORKDIR /workspace/tt-flash
RUN pip3 install .

# Set working directory back to tt-metal
WORKDIR /workspace/tt-metal

# Create entrypoint script
RUN echo '#!/bin/bash\n\
source /workspace/tt-metal/python_env/bin/activate\n\
exec "$@"' > /entrypoint.sh && \
    chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
CMD ["/bin/bash"]

