#!/bin/bash
# Build script for TT-Metal Docker container
# This script can be run on any machine, with or without Tenstorrent hardware

set -e

DOCKER_IMAGE_NAME="tt-metal"
DOCKER_IMAGE_TAG="latest"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}Building TT-Metal Docker image...${NC}"
echo "This build can be run on any machine - no Tenstorrent hardware required."
echo ""

# Check if SSH agent is running and has keys (for private repo access)
if ssh-add -l &>/dev/null; then
    echo -e "${GREEN}SSH agent detected with keys. Will use SSH authentication for Git.${NC}"
    SSH_AVAILABLE=true
else
    echo -e "${YELLOW}Warning: SSH agent is not running or has no keys loaded.${NC}"
    echo "The build will fail if trying to access private repositories."
    echo "To add SSH keys:"
    echo "  1. Start SSH agent: eval \$(ssh-agent)"
    echo "  2. Add your GitHub SSH key: ssh-add ~/.ssh/your_github_key"
    echo ""
    read -p "Continue anyway? (y/n) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
    SSH_AVAILABLE=false
fi

# Build with BuildKit for better caching and SSH forwarding support
echo -e "${GREEN}Starting Docker build...${NC}"
echo "This may take 20-30 minutes on first build due to compilation."
echo ""

if [ "$SSH_AVAILABLE" = true ]; then
    # Build with SSH forwarding for private repos
    DOCKER_BUILDKIT=1 docker build \
        --ssh default \
        --progress=plain \
        -t ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} \
        -f Dockerfile \
        .
else
    # Build without SSH (will fail on private repos)
    DOCKER_BUILDKIT=1 docker build \
        --progress=plain \
        -t ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} \
        -f Dockerfile \
        .
fi

if [ $? -eq 0 ]; then
    # Clean up temporary files
    rm -f install_dependencies_docker.sh
    
    echo ""
    echo -e "${GREEN}Docker image built successfully: ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}${NC}"
    echo ""
    echo "Image size:"
    docker images ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} --format "table {{.Repository}}:{{.Tag}}\t{{.Size}}"
    echo ""
    echo "To run the container:"
    echo "  - With TT hardware: ./run.sh"
    echo "  - Without hardware: ./run.sh --no-device"
else
    # Clean up temporary files even on failure
    rm -f install_dependencies_docker.sh
    
    echo -e "${RED}Build failed. Please check the error messages above.${NC}"
    exit 1
fi

