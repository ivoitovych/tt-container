#!/bin/bash

# Parse command line arguments
BUILD_TTMETAL=false
SHARED_CCACHE=false
BUILD_TYPE="Debug"
IMAGE_TAG_SUFFIX=""

while [[ $# -gt 0 ]]; do
    case $1 in
        --build-ttmetal)
            BUILD_TTMETAL=true
            shift
            ;;
        --shared-ccache)
            SHARED_CCACHE=true
            shift
            ;;
        --build-type)
            BUILD_TYPE="$2"
            shift 2
            ;;
        --tag-suffix)
            IMAGE_TAG_SUFFIX="$2"
            shift 2
            ;;
        -h|--help)
            echo "Usage: $0 [OPTIONS]"
            echo "Options:"
            echo "  --build-ttmetal     Build tt-metal during image creation"
            echo "  --shared-ccache     Enable shared ccache support"
            echo "  --build-type TYPE   Build type (Debug/Release) [default: Debug]"
            echo "  --tag-suffix SUFFIX Custom suffix for image tag"
            echo "  -h, --help          Show this help message"
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            exit 1
            ;;
    esac
done

# Generate image tag based on options
IMAGE_TAG="tt-metal-env"
if [ "$BUILD_TTMETAL" = "true" ]; then
    IMAGE_TAG="${IMAGE_TAG}-built-${BUILD_TYPE,,}"
fi
if [ "$SHARED_CCACHE" = "true" ]; then
    IMAGE_TAG="${IMAGE_TAG}-ccache"
fi
if [ -n "$IMAGE_TAG_SUFFIX" ]; then
    IMAGE_TAG="${IMAGE_TAG}-${IMAGE_TAG_SUFFIX}"
fi

echo "Building Docker image: $IMAGE_TAG"
echo "Configuration:"
echo "  BUILD_TTMETAL: $BUILD_TTMETAL"
echo "  SHARED_CCACHE: $SHARED_CCACHE"
echo "  BUILD_TYPE: $BUILD_TYPE"

# Build the image
docker build \
    --build-arg BUILD_TTMETAL=$BUILD_TTMETAL \
    --build-arg SHARED_CCACHE=$SHARED_CCACHE \
    --build-arg BUILD_TYPE=$BUILD_TYPE \
    --build-arg CCACHE_DIR=/ccache \
    -t $IMAGE_TAG \
    -f Dockerfile \
    .

if [ $? -eq 0 ]; then
    echo "Successfully built image: $IMAGE_TAG"
else
    echo "Failed to build image"
    exit 1
fi

